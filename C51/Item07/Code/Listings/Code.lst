C51 COMPILER V9.54   CODE                                                                  09/11/2023 11:50:17 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE CODE
OBJECT MODULE PLACED IN .\Objects\Code.obj
COMPILER INVOKED BY: E:\Programming\singlechip\Keil_v5\C51\BIN\C51.EXE Code.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEN
                    -D PRINT(.\Listings\Code.lst) TABS(2) OBJECT(.\Objects\Code.obj)

line level    source

   1          #include <reg52.h>
   2          #define uchar unsigned char
   3          #define uint unsigned int
   4          //P0 动态数码管输入
   5          //P1 矩阵按键模块
   6          
   7          sbit p22 = P2^2;
   8          sbit p23 = P2^3;
   9          sbit p24 = P2^4;    //74hc138
  10          
  11          sbit p30 = P3^0;
  12          sbit p31 = P3^1;    //独立按键模块
  13          
  14          
  15          static uchar number[16] = {
  16            0x3f,0x06,0x5b,0x4f,
  17            0x66,0x6d,0x7d,0x07,
  18            0x7f,0x6f,0x77,0x7c,
  19            0x39,0x5e,0x79,0x71
  20          };
  21          
  22          static uchar library[8] = {0};      //记录8个数码管的数值
  23          static uchar p1_low_temp[16] = {0}; //记录矩阵按键电平的改变
  24          static uchar p3_temp[2] = {1,1};        //记录独立按键电平的改变
  25          
  26          static uchar position = 0;          //此时选中的位置
  27          static bit position_token1 = 1;     //通过此数值控制被选位闪烁
  28          static uint position_token2 = 0;    //通过此数值控制被选位闪烁频率
  29          
  30          
  31          void delay(){
  32   1        //延时
  33   1        int i = 10;
  34   1        while(i--);
  35   1      }
  36          
  37          void display(){
  38   1        //持续输入到动态数码管
  39   1        uchar i;
  40   1        for(i=0;i<8;i++){
  41   2          if(i == position){
  42   3            position_token2 += 2*position_token1 - 1;
  43   3            if(position_token2 == 350) position_token1 = 0;
  44   3            if(position_token2 == 0) position_token1 = 1;
  45   3            if(position_token1 == 0) continue;
  46   3          }
  47   2          P0 = 0x00;
  48   2          p22 = i & 0x01;
  49   2          p23 = (i >> 1) & 0x01;
  50   2          p24 = (i >> 2) & 0x01;
  51   2          P0 = number[library[i]];
  52   2          delay();
  53   2        }
  54   1      }
C51 COMPILER V9.54   CODE                                                                  09/11/2023 11:50:17 PAGE 2   

  55          
  56          void check_Key1(){
  57   1        //检测矩阵键盘
  58   1        uchar i = 0;      //从高4位的最高位开始释放低电平
  59   1        uchar j,k;
  60   1        uchar num;
  61   1        while(i < 4){
  62   2          P1 = ~(0x80>>i);
  63   2          j = 0;          //从低4位的最高位开始检测
  64   2          while(j < 4){
  65   3            num = i*4+j;
  66   3            k = 0;//同一按键检测两次
  67   3            while(k <2){
  68   4              if(~p1_low_temp[num] == 0){
  69   5                if((((uchar)P1 >> (3-j))&(0x01)) == 1){
  70   6                  library[position] = num;
  71   6                  position_token1 = 1;position_token2 = 0;//重新展示再闪烁
  72   6                }
  73   5              }
  74   4              p1_low_temp[num] = ~(((uchar)P1 >> (3-j))&(0x01));
  75   4              k++;
  76   4            }
  77   3            j++;
  78   3          }
  79   2          i++;
  80   2        }
  81   1      }
  82          
  83          void check_Key2(){
  84   1        //检测独立按键
  85   1        if(p3_temp[0] == 0){
  86   2          if(p30 == 1){
  87   3            //选中的数值左移
  88   3            if(position == 0){
  89   4              position = 7;
  90   4            }else{
  91   4              position--;
  92   4            }
  93   3          }
  94   2        }
  95   1        p3_temp[0] = p30;
  96   1        /************/
  97   1        if(p3_temp[1] == 0){
  98   2          if(p31 == 1){
  99   3            //选中的数值右移
 100   3              if(position == 7){
 101   4              position = 0;
 102   4            }else{
 103   4              position++;
 104   4            }
 105   3          }
 106   2        }
 107   1        p3_temp[1] = p31;
 108   1      }
 109          
 110          
 111          void main(){
 112   1        P1 = 0x00;
 113   1        P0 = 0x00;
 114   1        p30 = 1;
 115   1        p31 = 1;
 116   1        while(1){
C51 COMPILER V9.54   CODE                                                                  09/11/2023 11:50:17 PAGE 3   

 117   2          display();
 118   2          check_Key1();
 119   2          check_Key2();
 120   2        }
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    293    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     45    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
